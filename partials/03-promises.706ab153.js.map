{"mappings":"iiBAAA,IAQEA,EACAC,EACAC,EAVFC,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,gBACpCC,EAAOF,SAASC,cAAc,eAC9BE,EAASH,SAASC,cAAc,iBAChCG,EAASJ,SAASC,cAAc,UAElCI,EAAU,EAId,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXc,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUS,MAAAR,IAGpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAKPJ,EAAOa,iBAAiB,SAAS,SAAAC,GAM/B,IALAA,EAAEC,iBACFzB,EAAI,EACJC,EAAQyB,OAAOrB,EAAWsB,OAC1BhB,EAAUe,OAAOjB,EAAOkB,OACxBzB,EAAYwB,OAAOlB,EAAKmB,OACjBhB,EAAU,GACfC,EAAcZ,EAAGC,GACd2B,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALP,MACjBS,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGhB,EAAQgB,EAARhB,SAAUuB,EAAKP,EAALP,MAClBS,EAAA5B,GAAS6B,OAAOK,QACd,sBAAqCH,OAAfrB,EAAS,QAAYqB,OAANE,EAAM,M,IAGjDzB,IACAX,IACAC,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDealy = document.querySelector('[name=delay]');\nconst step = document.querySelector('[name=step]');\nconst amount = document.querySelector('[name=amount]');\nconst submit = document.querySelector('button');\n\nlet counter = 0,\n  i,\n  delay,\n  delayStep;\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nsubmit.addEventListener('click', e => {\n  e.preventDefault();\n  i = 1;\n  delay = Number(firstDealy.value);\n  counter = Number(amount.value);\n  delayStep = Number(step.value);\n  while (counter > 0) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    counter--;\n    i++;\n    delay += delayStep;\n  }\n});\n// while(> 0){\n\n// }\n"],"names":["$ce04d3a99e08e73b$var$i","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$delayStep","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$firstDealy","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$submit","$ce04d3a99e08e73b$var$counter","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","Number","value","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.706ab153.js.map"}